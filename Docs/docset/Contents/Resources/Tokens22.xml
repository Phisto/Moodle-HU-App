<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/MOODLEDataModel.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/MOODLEDataModel</TokenIdentifier>
			<Abstract type="html">The MOODLEDataModel class represents the data model for the MOODLE app.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
            
			
			<NodeRef refid="22"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MOODLEDataModel/sharedDataModel</TokenIdentifier>
			<Abstract type="html">Returns the shared data model object for the process.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>+ (instancetype)sharedDataModel</Declaration>
			
			<ReturnValue><Abstract type="html">The default MOODLEDataModel object for the process.</Abstract></ReturnValue>
			<Anchor>//api/name/sharedDataModel</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MOODLEDataModel/new</TokenIdentifier>
			<Abstract type="html">UNAVAILABLE. This class is a singleton class to access the singleton use sharedDataModel.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>+ (instancetype)new</Declaration>
			
			<ReturnValue><Abstract type="html">Allocates a new instance of the receiving class, sends it an init message, and returns the initialized object.</Abstract></ReturnValue>
			<Anchor>//api/name/new</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/init</TokenIdentifier>
			<Abstract type="html">UNAVAILABLE. This class is a singleton class to access the singleton use sharedDataModel.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>- (instancetype)init</Declaration>
			
			<ReturnValue><Abstract type="html">An initialized object, or nil if an object could not be created for some reason that would not result in an exception.</Abstract></ReturnValue>
			<Anchor>//api/name/init</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/setCourseArray:</TokenIdentifier>
			<Abstract type="html">A mutable array of MOODLE courses.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSMutableArray&lt;MOODLECourse*&gt; *courseArray</Declaration>
			
			
			<Anchor>//api/name/courseArray</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/courseArray</TokenIdentifier>
			<Abstract type="html">A mutable array of MOODLE courses.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSMutableArray&lt;MOODLECourse*&gt; *courseArray</Declaration>
			
			
			<Anchor>//api/name/courseArray</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MOODLEDataModel/courseArray</TokenIdentifier>
			<Abstract type="html">A mutable array of MOODLE courses.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSMutableArray&lt;MOODLECourse*&gt; *courseArray</Declaration>
			
			
			<Anchor>//api/name/courseArray</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/setHiddenCourses:</TokenIdentifier>
			<Abstract type="html">A mutable array of MOODLE courses that are hidden.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSMutableArray&lt;MOODLECourse*&gt; *hiddenCourses</Declaration>
			
			
			<Anchor>//api/name/hiddenCourses</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/hiddenCourses</TokenIdentifier>
			<Abstract type="html">A mutable array of MOODLE courses that are hidden.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSMutableArray&lt;MOODLECourse*&gt; *hiddenCourses</Declaration>
			
			
			<Anchor>//api/name/hiddenCourses</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MOODLEDataModel/hiddenCourses</TokenIdentifier>
			<Abstract type="html">A mutable array of MOODLE courses that are hidden.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSMutableArray&lt;MOODLECourse*&gt; *hiddenCourses</Declaration>
			
			
			<Anchor>//api/name/hiddenCourses</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/setChats:</TokenIdentifier>
			<Abstract type="html">A mutable array of MOODLE chat items.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nullable, nonatomic, strong) NSArray&lt;MOODLEChat*&gt; *chats</Declaration>
			
			
			<Anchor>//api/name/chats</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/chats</TokenIdentifier>
			<Abstract type="html">A mutable array of MOODLE chat items.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nullable, nonatomic, strong) NSArray&lt;MOODLEChat*&gt; *chats</Declaration>
			
			
			<Anchor>//api/name/chats</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MOODLEDataModel/chats</TokenIdentifier>
			<Abstract type="html">A mutable array of MOODLE chat items.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nullable, nonatomic, strong) NSArray&lt;MOODLEChat*&gt; *chats</Declaration>
			
			
			<Anchor>//api/name/chats</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/setHasUserCredentials:</TokenIdentifier>
			<Abstract type="html">Boolean indicating if the app has stored user credentials in the keychain.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) BOOL hasUserCredentials</Declaration>
			
			
			<Anchor>//api/name/hasUserCredentials</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/hasUserCredentials</TokenIdentifier>
			<Abstract type="html">Boolean indicating if the app has stored user credentials in the keychain.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) BOOL hasUserCredentials</Declaration>
			
			
			<Anchor>//api/name/hasUserCredentials</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MOODLEDataModel/hasUserCredentials</TokenIdentifier>
			<Abstract type="html">Boolean indicating if the app has stored user credentials in the keychain.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) BOOL hasUserCredentials</Declaration>
			
			
			<Anchor>//api/name/hasUserCredentials</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/setShouldRememberCredentials:</TokenIdentifier>
			<Abstract type="html">Boolean indicating if the app should store the user credentials in the keychain.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) BOOL shouldRememberCredentials</Declaration>
			
			
			<Anchor>//api/name/shouldRememberCredentials</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/shouldRememberCredentials</TokenIdentifier>
			<Abstract type="html">Boolean indicating if the app should store the user credentials in the keychain.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) BOOL shouldRememberCredentials</Declaration>
			
			
			<Anchor>//api/name/shouldRememberCredentials</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MOODLEDataModel/shouldRememberCredentials</TokenIdentifier>
			<Abstract type="html">Boolean indicating if the app should store the user credentials in the keychain.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) BOOL shouldRememberCredentials</Declaration>
			
			
			<Anchor>//api/name/shouldRememberCredentials</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/setShouldAutoLogin:</TokenIdentifier>
			<Abstract type="html">Boolean indicating if the app should auto login.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) BOOL shouldAutoLogin</Declaration>
			
			
			<Anchor>//api/name/shouldAutoLogin</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/shouldAutoLogin</TokenIdentifier>
			<Abstract type="html">Boolean indicating if the app should auto login.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) BOOL shouldAutoLogin</Declaration>
			
			
			<Anchor>//api/name/shouldAutoLogin</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MOODLEDataModel/shouldAutoLogin</TokenIdentifier>
			<Abstract type="html">Boolean indicating if the app should auto login.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) BOOL shouldAutoLogin</Declaration>
			
			
			<Anchor>//api/name/shouldAutoLogin</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/setUserName:</TokenIdentifier>
			<Abstract type="html">The stored username.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *userName</Declaration>
			
			
			<Anchor>//api/name/userName</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/userName</TokenIdentifier>
			<Abstract type="html">The stored username.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *userName</Declaration>
			
			
			<Anchor>//api/name/userName</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MOODLEDataModel/userName</TokenIdentifier>
			<Abstract type="html">The stored username.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *userName</Declaration>
			
			
			<Anchor>//api/name/userName</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/setUserPassword:</TokenIdentifier>
			<Abstract type="html">Thes stored password.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *userPassword</Declaration>
			
			
			<Anchor>//api/name/userPassword</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/userPassword</TokenIdentifier>
			<Abstract type="html">Thes stored password.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *userPassword</Declaration>
			
			
			<Anchor>//api/name/userPassword</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MOODLEDataModel/userPassword</TokenIdentifier>
			<Abstract type="html">Thes stored password.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *userPassword</Declaration>
			
			
			<Anchor>//api/name/userPassword</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/setLoginDate:</TokenIdentifier>
			<Abstract type="html">The date of the login.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, nullable) NSDate *loginDate</Declaration>
			
			
			<Anchor>//api/name/loginDate</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/loginDate</TokenIdentifier>
			<Abstract type="html">The date of the login.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, nullable) NSDate *loginDate</Declaration>
			
			
			<Anchor>//api/name/loginDate</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MOODLEDataModel/loginDate</TokenIdentifier>
			<Abstract type="html">The date of the login.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, nullable) NSDate *loginDate</Declaration>
			
			
			<Anchor>//api/name/loginDate</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/saveUserCredentials:andPassword:</TokenIdentifier>
			<Abstract type="html">This method will store the given user credentials in the devices keychain. The password will be stored encrypted and only accessible to the app.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>- (void)saveUserCredentials:(NSString *)username andPassword:(NSString *)password</Declaration>
			<Parameters>
				<Parameter>
					<Name>username</Name>
					<Abstract type="html">The username to store.</Abstract>
				</Parameter><Parameter>
					<Name>password</Name>
					<Abstract type="html">The password to store.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/saveUserCredentials:andPassword:</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/deleteUserCredentials</TokenIdentifier>
			<Abstract type="html">This method will delete the stored the user credentials in the devices keychain.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>- (void)deleteUserCredentials</Declaration>
			
			
			<Anchor>//api/name/deleteUserCredentials</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/setItem:isHidden:</TokenIdentifier>
			<Abstract type="html">This method will set the isHidden flag of the given item to a persistent store.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>- (void)setItem:(MOODLECourse *)item isHidden:(BOOL)hidden</Declaration>
			<Parameters>
				<Parameter>
					<Name>item</Name>
					<Abstract type="html">The item to hide/unhide.</Abstract>
				</Parameter><Parameter>
					<Name>hidden</Name>
					<Abstract type="html">Weather the item is hidden or not.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setItem:isHidden:</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/setItem:isFavorit:</TokenIdentifier>
			<Abstract type="html">This method will set the isFavourite flag of the given item to a persistent store.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>- (void)setItem:(MOODLECourse *)item isFavorit:(BOOL)favorit</Declaration>
			<Parameters>
				<Parameter>
					<Name>item</Name>
					<Abstract type="html">The item to flag.</Abstract>
				</Parameter><Parameter>
					<Name>favorit</Name>
					<Abstract type="html">Boolean indicating if the item is a favorit or not.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setItem:isFavorit:</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/updateCourseItemsOrderingWeight</TokenIdentifier>
			<Abstract type="html">This method will save the current MOODLE course order to disk, so it can be restored the next time the app is loaded.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>- (void)updateCourseItemsOrderingWeight</Declaration>
			
			
			<Anchor>//api/name/updateCourseItemsOrderingWeight</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/loginWithUsername:password:completionHandler:</TokenIdentifier>
			<Abstract type="html">This method will login a user with the given credentials.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>- (void)loginWithUsername:(NSString *)username password:(NSString *)password completionHandler:(void ( ^ ) ( BOOL success , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>username</Name>
					<Abstract type="html">The username to use.</Abstract>
				</Parameter><Parameter>
					<Name>password</Name>
					<Abstract type="html">The password to use.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when the login is complete. This handler is executed on the main thread.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/loginWithUsername:password:completionHandler:</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/logoutWithCompletionHandler:</TokenIdentifier>
			<Abstract type="html">This method will logout the user.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>- (void)logoutWithCompletionHandler:(void ( ^ ) ( BOOL success , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when content loggout is complete.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/logoutWithCompletionHandler:</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/loadItemContentForItem:completionHandler:</TokenIdentifier>
			<Abstract type="html">This method will load the content of a given MOODLE course.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>- (void)loadItemContentForItem:(MOODLECourse *)item completionHandler:(void ( ^ ) ( BOOL success , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>item</Name>
					<Abstract type="html">The item.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when content loading is complete. This handler is executed on the main thread.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/loadItemContentForItem:completionHandler:</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/loadSearchResultWithSerachString:completionHandler:</TokenIdentifier>
			<Abstract type="html">This method will perform a search for MOODLE courses with a given search query.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>- (void)loadSearchResultWithSerachString:(NSString *)searchString completionHandler:(void ( ^ ) ( BOOL success , NSError *_Nullable error , NSArray *_Nullable searchResults ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>searchString</Name>
					<Abstract type="html">The search query string.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when searching is complete. This handler is executed on the main thread.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/loadSearchResultWithSerachString:completionHandler:</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/loadForumEntryContentForEntry:completionHandler:</TokenIdentifier>
			<Abstract type="html">This method will load the content of a given forum thread.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>- (void)loadForumEntryContentForEntry:(MOODLEForumEntry *)entry completionHandler:(void ( ^ ) ( BOOL , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>entry</Name>
					<Abstract type="html">The entry for which to load the content.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when loading is complete.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/loadForumEntryContentForEntry:completionHandler:</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/loadChatsWithCompletionHandler:</TokenIdentifier>
			<Abstract type="html">This method will load all &apos;recent&apos; chats for this Moodle account.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>- (void)loadChatsWithCompletionHandler:(void ( ^ ) ( BOOL success , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when loading is complete.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/loadChatsWithCompletionHandler:</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/loadChatMessagesforChat:withCompletionHandler:</TokenIdentifier>
			<Abstract type="html">This method will load all messages for a given chat.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>- (void)loadChatMessagesforChat:(MOODLEChat *)chat withCompletionHandler:(void ( ^ ) ( BOOL success , NSError *_Nullable error ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>chat</Name>
					<Abstract type="html">The chat for which to load the messages.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when loading is complete.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/loadChatMessagesforChat:withCompletionHandler:</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/setDocumentCacheSize:</TokenIdentifier>
			<Abstract type="html">The size of the document cache in Megabytes.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSUInteger documentCacheSize</Declaration>
			
			
			<Anchor>//api/name/documentCacheSize</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/documentCacheSize</TokenIdentifier>
			<Abstract type="html">The size of the document cache in Megabytes.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSUInteger documentCacheSize</Declaration>
			
			
			<Anchor>//api/name/documentCacheSize</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/MOODLEDataModel/documentCacheSize</TokenIdentifier>
			<Abstract type="html">The size of the document cache in Megabytes.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) NSUInteger documentCacheSize</Declaration>
			
			
			<Anchor>//api/name/documentCacheSize</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/localRessourceURLForItem:</TokenIdentifier>
			<Abstract type="html">This method will search for a local file assoziated with the given item.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>- (nullable NSURL *)localRessourceURLForItem:(MOODLECourseSectionItem *)item</Declaration>
			<Parameters>
				<Parameter>
					<Name>item</Name>
					<Abstract type="html">The item to search for.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A NSURL to the local file or nil if there is no cached file.</Abstract></ReturnValue>
			<Anchor>//api/name/localRessourceURLForItem:</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/saveRemoteRessource:completionHandler:</TokenIdentifier>
			<Abstract type="html">This method will load the file for the given item, save it locally and call the completion handler.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>- (void)saveRemoteRessource:(MOODLECourseSectionItem *)item completionHandler:(void ( ^ ) ( BOOL success , NSError *_Nullable error , NSURL *_Nullable localRessourceURL ))completionHandler</Declaration>
			<Parameters>
				<Parameter>
					<Name>item</Name>
					<Abstract type="html">The item to load the file for.</Abstract>
				</Parameter><Parameter>
					<Name>completionHandler</Name>
					<Abstract type="html">The completion handler to call when loading and saving is complete. This handler is executed on the main thread.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/saveRemoteRessource:completionHandler:</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/sizeOfCachedDocuments</TokenIdentifier>
			<Abstract type="html">This method will enumerate through all cached documents and calculate the size.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>- (NSInteger)sizeOfCachedDocuments</Declaration>
			
			<ReturnValue><Abstract type="html">The size of all cached documents in Megabyte as a NSInteger.</Abstract></ReturnValue>
			<Anchor>//api/name/sizeOfCachedDocuments</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/allRessourceURLS</TokenIdentifier>
			<Abstract type="html">This method will return all cached document urls.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>- (NSArray&lt;NSURL*&gt; *)allRessourceURLS</Declaration>
			
			<ReturnValue><Abstract type="html">The document urls.</Abstract></ReturnValue>
			<Anchor>//api/name/allRessourceURLS</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/MOODLEDataModel/deleteDocumentWithURL:</TokenIdentifier>
			<Abstract type="html">This method will delete the file or folder at the given url.</Abstract>
			<DeclaredIn>MOODLEDataModel.h</DeclaredIn>
			
			<Declaration>- (BOOL)deleteDocumentWithURL:(NSURL *)docURL</Declaration>
			<Parameters>
				<Parameter>
					<Name>docURL</Name>
					<Abstract type="html">The url to the file or folder.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Yes if the file was deleted, NO if the file could not be deleted or if there was no file at the given url.</Abstract></ReturnValue>
			<Anchor>//api/name/deleteDocumentWithURL:</Anchor>
            <NodeRef refid="22"/>
		</Token>
		
        
        
	</File>
</Tokens>